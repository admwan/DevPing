package net.spikesync.devping;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.tuple;
import static org.hamcrest.Matchers.containsString;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.view;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.condition.EnabledIf;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.test.web.servlet.MockMvc;



@WebMvcTest   // <1>
public class DevPingControllerTest {

	private static final Logger logger = LoggerFactory.getLogger(DevPingApplication.class);

		@Value("${test-silvercloud-present-in-devpingcontroller}")
		private String testingEnabled;
	
		@Autowired
		private MockMvc mockMvc; // <2>
		@Autowired
		private SilverCloud sc;

  @Test
  @EnabledIf("testingEnabled")
  public void testHomePage() throws Exception {
    mockMvc.perform(get("/"))    // <3>
    
      .andExpect(status().isOk())  // <4>
      
      .andExpect(view().name("schome.html"));  // <5>
      
//      .andExpect(content().string(           // <6>
//          containsString("Welcome to the Home page of the DevPing...")));  
  
  // Check if the ApplicationContext is available here as well
    
    logger.info("################## Now testing if SilverCloud bean is available in the DevPingController ######################");
   	assertThat(sc.getScNodes())
		.extracting("nodeName", "ipAddress").contains(
				tuple("SURFIE","192.168.50.100"),
				tuple("CAPTUW","192.168.50.104"),
				tuple("THORFW","192.168.50.107"),
				tuple("LOKIFS","192.168.50.110"),
				tuple("SCARFS","192.168.50.113"),
				tuple("HYDRFS","192.168.50.116"),
				tuple("ASGAFS","192.168.50.119")
				);

  
  }
  @SuppressWarnings("unused") // This method is used by JUnit 5 @EnabledIf, i.e., it is generated by JUnit and not used by methods of net.spikesync.devping.DevPingApplicationTest
	private boolean testingEnabled() {
  	logger.debug("In method DevPingControllerTest.testingEnabled() with this.testingEnabled = " + this.testingEnabled);
  	if (this.testingEnabled.equals("true") || this.testingEnabled.equals("TRUE")) 
  		return Boolean.TRUE;
  	else return Boolean.FALSE; 
  }

}
