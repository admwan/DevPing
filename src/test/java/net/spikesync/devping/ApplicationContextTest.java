package net.spikesync.devping;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.condition.EnabledIf;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.beans.factory.config.AutowireCapableBeanFactory;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.ApplicationContext;

@SpringBootTest
public class ApplicationContextTest {
	private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(DevPingApplication.class);

	@Value("${test-devpingapplication-context}")
	private String testingEnabled;

	@Test
    @EnabledIf("testingEnabled")
	void contextLoads(ApplicationContext context) {

		AutowireCapableBeanFactory contextcontents = context.getAutowireCapableBeanFactory();
		logger.debug("**************** AutowiredCapableBeanFactory: " + contextcontents.toString());

		assertThat(context).isNotNull();
		assertThat(context.getBean(SilverCloud.class)).isNotNull();

	}
    @SuppressWarnings("unused") // This method is used by JUnit 5 @EnabledIf, i.e., it is generated by JUnit and not used by methods of net.spikesync.devping.DevPingApplicationTest
	private boolean testingEnabled() {
    	logger.debug("################### In method ***ApplicationContext***Test.testingEnabled() with this.testingEnabled = " + this.testingEnabled);
    	if (this.testingEnabled.equals("true") || this.testingEnabled.equals("TRUE")) 
    		return Boolean.TRUE;
    	else return Boolean.FALSE; 
    }


}
